#!/bin/bash

# CVE-Search MCP Server 构建脚本

set -e

# 获取脚本所在目录
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
IMAGE_NAME="cve-search-mcp"

# 默认标签
TAG="${1:-latest}"

echo "Building CVE-Search MCP Server Docker image..."
echo "Image: ${IMAGE_NAME}:${TAG}"
echo "Directory: ${SCRIPT_DIR}"

# 构建镜像
docker build \
    --tag "${IMAGE_NAME}:${TAG}" \
    --tag "${IMAGE_NAME}:latest" \
    --build-arg BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
    --build-arg VCS_REF="$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')" \
    "${SCRIPT_DIR}"

echo "✅ Build completed successfully!"
echo ""
echo "Usage examples:"
echo "  # Run MCP server (stdio mode - default)"
echo "  docker run --rm ${IMAGE_NAME}:${TAG}"
echo ""
echo "  # Run with custom entry script"
echo "  docker run --rm ${IMAGE_NAME}:${TAG} ./entry.sh"
echo ""
echo "  # Run interactive bash session"
echo "  docker run --rm -it ${IMAGE_NAME}:${TAG} /bin/bash"
echo ""
echo "  # Test API connectivity"
echo "  docker run --rm ${IMAGE_NAME}:${TAG} curl -s https://cve.circl.lu/api/browse | head -20"
echo ""
echo "  # Check available tools"
echo "  docker run --rm ${IMAGE_NAME}:${TAG} python -c \"import main; print('Available tools loaded')\"" 

# 显示镜像信息
echo ""
echo "Image information:"
docker images "${IMAGE_NAME}:${TAG}" --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}\t{{.CreatedSince}}\t{{.Size}}"